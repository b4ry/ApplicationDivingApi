<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="info"
      internalLogFile="logs\internal-nlog.txt">

  <!-- the targets to write to -->
  <targets>

    <!-- write to the void aka just remove -->
    <target xsi:type="Null" 
            name="blackhole" />

    <target xsi:type="Database"
            name="database"
            connectionString="Server=(local)\SQLEXPRESS;Database=PortfolioLoggingDB;Trusted_Connection=True;"
            commandText="exec dbo.InsertLog
                            @level,
                            @callSite,
                            @type,
                            @message,
                            @stackTrace,
                            @innerException,
                            @additionalInfo">
      
      <install-command>
        <text>
          USE [PortfolioLoggingDb]
          CREATE TABLE [dbo].[Logs]
          (
            [LogId] [int] IDENTITY(1,1) not null,
            [Level] [varchar](max) not null,
            [CallSite] [varchar](max) not null,
            [Type] [varchar](max) not null,
            [Message] [varchar](max) not null,
            [StackTrace] [varchar](max) not null,
            [InnerException] [varchar](max) not null,
            [AdditionalInfo] [varchar](max) not null,
            [LoggedOnDate] [datetime] not null CONSTRAINT [df_logs_loggedondate] DEFAULT (GETDATE()),

            CONSTRAINT [pk_logs] PRIMARY KEY CLUSTERED
            (
              [LogId]
            )
          )
        </text>
        <ignoreFailures>false</ignoreFailures>
      </install-command>

      <install-command>
        <text>
          CREATE PROCEDURE [dbo].[InsertLog]
          (
            @level varchar(max),
            @callSite varchar(max),
            @type varchar(max),
            @message varchar(max),
            @stackTrace varchar(max),
            @innerException varchar(max),
            @additionalInfo varchar(max)
          )
          AS INSERT INTO dbo.Logs
          (
            [Level],
            CallSite,
            [Type],
            [Message],
            StackTrace,
            InnerException,
            AdditionalInfo
          )
          VALUES
          (
            @level,
            @callSite,
            @type,
            @message,
            @stackTrace,
            @innerException,
            @additionalInfo
          )
        </text>
        <ignoreFailures>false</ignoreFailures>
      </install-command>
      
      <parameter name="@level" layout="${level}" />
      <parameter name="@callSite" layout="${callsite}" />
      <parameter name="@type" layout="${exception:format=type}" />
      <parameter name="@message" layout="${exception:format=message}" />
      <parameter name="@stackTrace" layout="${exception:format=stackTrace}" />
      <parameter name="@innerException" layout="${exception:format=toString:innerFormat=ShortType,Message,Method:MaxInnerExceptionLevel=10:InnerExceptionSeparator=*" />
      <parameter name="@additionalInfo" layout="${message}" />
    </target>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>

    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    
    <!-- Logging to db -->
    <logger name="*" minlevel="Trace" writeTo="database"/>
  </rules>
</nlog>